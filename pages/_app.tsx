import type { AppProps } from "next/app";
import { Provider } from "react-redux";
import { IntlProvider } from "react-intl";
import Head from "next/head";
import { Fragment } from "react";
import { ApolloProvider } from "@apollo/client";

import messages_pl from "../intl/pl.json";
import { wrapper } from "../store/store";
import { Languages } from "../store/configSlice";
import { Container } from "../common/Container";

import "../styles/globals.scss";
import { flatTranslations } from "@helpers/flatTranslations";
import { initializeApollo } from "lib/apolloClient";

const messages = {
  [Languages.pl]: messages_pl,
};

export const appApolloClient = initializeApollo();

function App({ Component, ...rest }: AppProps) {
  const { store, props } = wrapper.useWrappedStore(rest);
  const { lang } = store.getState().config;
  const { pageProps } = props;
  const flattedTranslations = flatTranslations(messages[lang]);

  return (
    <ApolloProvider client={appApolloClient}>
      <Provider store={store}>
        <IntlProvider
          messages={flattedTranslations}
          locale={lang}
          defaultLocale={Languages.pl}
        >
          <Fragment>
            <Head>
              <title>Create Next App</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>
            <Container>
              <Component {...pageProps} />
            </Container>
          </Fragment>
        </IntlProvider>
      </Provider>
    </ApolloProvider>
  );
}

export default App;
